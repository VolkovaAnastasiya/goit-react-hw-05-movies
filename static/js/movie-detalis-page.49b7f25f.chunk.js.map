{"version":3,"file":"static/js/movie-detalis-page.49b7f25f.chunk.js","mappings":"4TAEAA,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAW,mCAAG,sGAGfF,IAAAA,IAAA,6CAAgDC,IAHjC,uBAEfE,EAFe,EAEvBC,KAAQD,QAFe,kBAKlBA,GALkB,2CAAH,qDAQXE,EAAc,mCAAG,WAAMC,GAAN,yFAGlBN,IAAAA,IAAA,gCAAmCC,EAAnC,kBAAoDK,IAHlC,uBAElBH,EAFkB,EAE1BC,KAAQD,QAFkB,kBAKrBA,GALqB,2CAAH,sDAQdI,EAAe,mCAAG,WAAMC,GAAN,yFACNR,IAAAA,IAAA,iBAAoBQ,EAApB,oBAAkCP,IAD5B,uBACrBG,EADqB,EACrBA,KADqB,kBAGtBA,GAHsB,2CAAH,sDAMfK,EAAS,mCAAG,WAAMD,GAAN,yFACAR,IAAAA,IAAA,iBAAoBQ,EAApB,4BAA0CP,IAD1C,uBACfG,EADe,EACfA,KADe,kBAEhBA,GAFgB,2CAAH,sDAKTM,EAAO,mCAAG,WAAMF,GAAN,yFACER,IAAAA,IAAA,iBACXQ,EADW,4BACWP,EADX,oBADF,uBACbG,EADa,EACbA,KADa,kBAIdA,GAJc,2CAAH,uD,mJC9BPO,EAAOC,EAAAA,EAAAA,IAAH,0CAGJC,EAAMD,EAAAA,EAAAA,IAAH,4DAIHE,EAAMF,EAAAA,EAAAA,OAAH,wSAcHG,GAAOH,EAAAA,EAAAA,GAAOI,EAAAA,GAAPJ,CAAH,oJASJK,EAAIL,EAAAA,EAAAA,EAAH,0C,SCrBC,SAASM,IACtB,IAAMC,GAASC,EAAAA,EAAAA,MAETC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAUA,OAJAC,EAAAA,EAAAA,YAAU,YACRnB,EAAAA,EAAAA,IAAgBY,EAAOX,IAAImB,MAAK,SAAAH,GAAK,OAAIC,EAASD,QACjD,CAACL,EAAOX,MAGT,iCACE,SAACM,EAAD,CAAKc,KAAK,SAASC,QAVR,WACbR,GAAU,IASR,sBAGA,SAACV,EAAD,UACGa,IACC,iCACE,SAACX,EAAD,WACE,gBACEiB,IACEN,EAAMO,YAAN,0CACuCP,EAAMO,aAD7C,qIAIFC,IAAKR,EAAMS,oBAGf,UAACpB,EAAD,YACE,wBAAKW,EAAMS,kBACX,SAAChB,EAAD,2BAAcO,EAAMU,iBACpB,uCACA,SAACjB,EAAD,UAAIO,EAAMW,YAEV,UAACtB,EAAD,YACE,yCACCW,EAAMY,OAAOC,KAAI,gBAAG7B,EAAH,EAAGA,GAAI8B,EAAP,EAAOA,KAAP,OAChB,SAACrB,EAAD,UAAaqB,GAAL9B,kBAOpB,mBACA,oDACA,SAACO,EAAD,CAAMwB,GAAG,OAAT,mBAEA,SAACxB,EAAD,CAAMwB,GAAG,UAAT,qBACA,SAAC,KAAD","sources":["services/apiService.js","stiles/MovieDetailsPage.styled.jsx","view/MovieDetalisPage.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst api_key = '342eb2d403c7b59809d73aa477ec348f';\n\nexport const getTranding = async () => {\n  const {\n    data: { results },\n  } = await axios.get(`/trending/movie/day?page=1&api_key=${api_key}`);\n\n  return results;\n};\n\nexport const getSearchMovie = async query => {\n  const {\n    data: { results },\n  } = await axios.get(`/search/movie?api_key=${api_key}&query=${query}`);\n\n  return results;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await axios.get(`/movie/${id}?api_key=${api_key}`);\n\n  return data;\n};\n\nexport const getReview = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?api_key=${api_key}`);\n  return data;\n};\n\nexport const getCast = async id => {\n  const { data } = await axios.get(\n    `/movie/${id}/credits?api_key=${api_key}&language=en-US`\n  );\n  return data;\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\nexport const Wrap = styled.div`\n  display: flex;\n`;\nexport const Box = styled.div`\n  max-width: 50%;\n  margin: 20px;\n`;\nexport const Btn = styled.button`\n  width: 100px;\n  height: 30px;\n  border-radius: 5px;\n//   background: #00a6ff;\n//   color: rgb(247, 241, 241);\n  font-size: 14px;\n  cursor: pointer;\n  border: none;\n  transform: scale(1);\n  transition-duration: 300ms;\n  margin-top: 40px;\n  margin-left: 20px;\n`;\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n  margin: 20px;\n  font-size: 24px;\n  font-weight: 500;\n  &.active {\n    color: #00a6ff;\n  }\n`;\nexport const P = styled.p`\nfont-size: 18px;\n`","import { getMovieDetails } from 'services/apiService';\nimport { useState, useEffect } from 'react';\nimport {\n  useParams,\n  useNavigate,\n  Outlet,\n\n  // useLocation,\n} from 'react-router-dom';\nimport { Box, Wrap, Btn, Link, P } from 'stiles/MovieDetailsPage.styled';\n\nexport default function MovieDetalisPage() {\n  const params = useParams();\n  // const location = useLocation();\n  const navigate = useNavigate();\n  const [movie, setMovie] = useState(null);\n\n  const onBack = () => {\n    navigate(-1);\n  };\n\n  useEffect(() => {\n    getMovieDetails(params.id).then(movie => setMovie(movie));\n  }, [params.id]);\n\n  return (\n    <>\n      <Btn type=\"button\" onClick={onBack}>\n        Go back\n      </Btn>\n      <Wrap>\n        {movie && (\n          <>\n            <Box>\n              <img\n                src={\n                  movie.poster_path\n                    ? `https://image.tmdb.org/t/p/w300/${movie.poster_path}`\n                    : `https://st4.depositphotos.com/14953852/22772/v/600/depositphotos_227725020-stock-illustration-image-available-icon-flat-vector.jpg`\n                }\n                alt={movie.original_title}\n              />\n            </Box>\n            <Box>\n              <h2>{movie.original_title}</h2>\n              <P>{`Rating ${movie.vote_average}`}</P>\n              <h3>Owerview:</h3>\n              <P>{movie.overview}</P>\n\n              <Box>\n                <strong>Ganres: </strong>\n                {movie.genres.map(({ id, name }) => (\n                  <P key={id}>{name}</P>\n                ))}\n              </Box>\n            </Box>\n          </>\n        )}\n      </Wrap>\n      <hr />\n      <h2>Additional information</h2>\n      <Link to=\"cast\">Cast</Link>\n\n      <Link to=\"reviews\">Rewiev</Link>\n      <Outlet />\n    </>\n  );\n}\n\n// state={{ from: location }}\n"],"names":["axios","api_key","getTranding","results","data","getSearchMovie","query","getMovieDetails","id","getReview","getCast","Wrap","styled","Box","Btn","Link","NavLink","P","MovieDetalisPage","params","useParams","navigate","useNavigate","useState","movie","setMovie","useEffect","then","type","onClick","src","poster_path","alt","original_title","vote_average","overview","genres","map","name","to"],"sourceRoot":""}