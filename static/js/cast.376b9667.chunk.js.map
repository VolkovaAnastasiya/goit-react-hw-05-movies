{"version":3,"file":"static/js/cast.376b9667.chunk.js","mappings":"wPAEaA,EAAOC,EAAAA,EAAAA,GAAH,gQAYJC,EAAOD,EAAAA,EAAAA,GAAH,iRASJE,EAAQF,EAAAA,EAAAA,IAAH,mN,SClBH,SAASG,IACpB,OAAuBC,EAAAA,EAAAA,UAAS,MAAhC,eAAOC,EAAP,KAAaC,EAAb,KACMC,GAASC,EAAAA,EAAAA,MAMf,OAJAC,EAAAA,EAAAA,YAAU,YACdC,EAAAA,EAAAA,IAAQH,EAAOI,IAAIC,KAAKN,KAClB,CAACC,EAAOI,MAGN,8BACGN,IACC,SAACN,EAAD,UACGM,EAAKA,KAAKQ,KAAI,SAAAC,GAAK,OAClB,UAACb,EAAD,YACE,SAACC,EAAD,CACEa,IACED,EAAME,aAAN,0CACuCF,EAAME,cAD7C,qIAIFC,IAAKH,EAAMI,iBAEb,uBAAIJ,EAAMI,iBACV,uBAAIJ,EAAMK,cAVDL,EAAMH,a,0MChBjCS,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAW,mCAAG,sGAGfF,IAAAA,IAAA,6CAAgDC,IAHjC,uBAEfE,EAFe,EAEvBC,KAAQD,QAFe,kBAKlBA,GALkB,2CAAH,qDAQXE,EAAc,mCAAG,WAAMC,GAAN,yFAGlBN,IAAAA,IAAA,gCAAmCC,EAAnC,kBAAoDK,IAHlC,uBAElBH,EAFkB,EAE1BC,KAAQD,QAFkB,kBAKrBA,GALqB,2CAAH,sDAQdI,EAAe,mCAAG,WAAMhB,GAAN,yFACNS,IAAAA,IAAA,iBAAoBT,EAApB,oBAAkCU,IAD5B,uBACrBG,EADqB,EACrBA,KADqB,kBAGtBA,GAHsB,2CAAH,sDAMfI,EAAS,mCAAG,WAAMjB,GAAN,yFACAS,IAAAA,IAAA,iBAAoBT,EAApB,4BAA0CU,IAD1C,uBACfG,EADe,EACfA,KADe,kBAEhBA,GAFgB,2CAAH,sDAKTd,EAAO,mCAAG,WAAMC,GAAN,yFACES,IAAAA,IAAA,iBACXT,EADW,4BACWU,EADX,oBADF,uBACbG,EADa,EACbA,KADa,kBAIdA,GAJc,2CAAH","sources":["stiles/Cast.styled.jsx","components/Cast.jsx","services/apiService.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 18px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin: 30px;\n  \n`;\nexport const Item = styled.li`\n  text-align: center;\n  font-size: 18px;\n   font-family:Verdana, Geneva, Tahoma, sans-serif\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 260px;\n  object-fit: contain;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;","import { useEffect, useState } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport { getCast } from \"services/apiService\";\nimport { List, Item, Image } from \"stiles/Cast.styled\";\n\nexport default function Cast(){\n    const [cast, setCast]= useState(null)\n    const params = useParams();\n\n    useEffect(()=>{\ngetCast(params.id).then(setCast)\n    },[params.id])\n    \n    return (\n        <>\n          {cast && (\n            <List>\n              {cast.cast.map(actor => (\n                <Item key={actor.id}>\n                  <Image\n                    src={\n                      actor.profile_path\n                        ? `https://image.tmdb.org/t/p/w200/${actor.profile_path}`\n                        : `https://st4.depositphotos.com/14953852/22772/v/200/depositphotos_227725020-stock-illustration-image-available-icon-flat-vector.jpg`\n                    }\n                    alt={actor.original_name}\n                  />\n                  <p>{actor.original_name}</p>\n                  <p>{actor.character}</p>\n                </Item>\n              ))}\n            </List>\n          )}\n        </>\n      );\n}","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst api_key = '342eb2d403c7b59809d73aa477ec348f';\n\nexport const getTranding = async () => {\n  const {\n    data: { results },\n  } = await axios.get(`/trending/movie/day?page=1&api_key=${api_key}`);\n\n  return results;\n};\n\nexport const getSearchMovie = async query => {\n  const {\n    data: { results },\n  } = await axios.get(`/search/movie?api_key=${api_key}&query=${query}`);\n\n  return results;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await axios.get(`/movie/${id}?api_key=${api_key}`);\n\n  return data;\n};\n\nexport const getReview = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?api_key=${api_key}`);\n  return data;\n};\n\nexport const getCast = async id => {\n  const { data } = await axios.get(\n    `/movie/${id}/credits?api_key=${api_key}&language=en-US`\n  );\n  return data;\n};\n"],"names":["List","styled","Item","Image","Cast","useState","cast","setCast","params","useParams","useEffect","getCast","id","then","map","actor","src","profile_path","alt","original_name","character","axios","api_key","getTranding","results","data","getSearchMovie","query","getMovieDetails","getReview"],"sourceRoot":""}