{"version":3,"file":"static/js/movies-page.804e7012.chunk.js","mappings":"qNACaA,EAAOC,EAAAA,EAAAA,GAAH,kJASJC,EAAOD,EAAAA,EAAAA,GAAH,+M,SCNF,SAASE,EAAT,GAAiC,IAAXC,EAAU,EAAVA,OAC7BC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACN,EAAD,UACGI,EAAOG,KAAI,SAAAC,GAAK,OACf,SAACN,EAAD,WACE,SAAC,KAAD,CAAMO,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,UACE,wBAAKG,EAAMK,WAFJL,EAAME,W,0MCRzBI,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAW,mCAAG,sGAGfF,IAAAA,IAAA,6CAAgDC,IAHjC,uBAEfE,EAFe,EAEvBC,KAAQD,QAFe,kBAKlBA,GALkB,2CAAH,qDAQXE,EAAc,mCAAG,WAAMC,GAAN,yFAGlBN,IAAAA,IAAA,gCAAmCC,EAAnC,kBAAoDK,IAHlC,uBAElBH,EAFkB,EAE1BC,KAAQD,QAFkB,kBAKrBA,GALqB,2CAAH,sDAQdI,EAAe,mCAAG,WAAMX,GAAN,yFACNI,IAAAA,IAAA,iBAAoBJ,EAApB,oBAAkCK,IAD5B,uBACrBG,EADqB,EACrBA,KADqB,kBAGtBA,GAHsB,2CAAH,sDAMfI,EAAS,mCAAG,WAAMZ,GAAN,yFACAI,IAAAA,IAAA,iBAAoBJ,EAApB,4BAA0CK,IAD1C,uBACfG,EADe,EACfA,KADe,kBAEhBA,GAFgB,2CAAH,sDAKTK,EAAO,mCAAG,WAAMb,GAAN,yFACEI,IAAAA,IAAA,iBACXJ,EADW,4BACWK,EADX,oBADF,uBACbG,EADa,EACbA,KADa,kBAIdA,GAJc,2CAAH,uD,iJC/BPM,EAAOvB,EAAAA,EAAAA,IAAH,icAmBJwB,EAAOxB,EAAAA,EAAAA,KAAH,8KAUJyB,EAAMzB,EAAAA,EAAAA,OAAH,0bAmBH0B,EAAQ1B,EAAAA,EAAAA,MAAH,mP,SC9CH,SAAS2B,EAAT,GAA2D,IAAtCC,EAAqC,EAArCA,eAAgBC,EAAqB,EAArBA,aAAcC,EAAO,EAAPA,MAC9D,OACI,SAACP,EAAD,WACE,UAACC,EAAD,CAAMO,SAAUF,EAAhB,WACE,SAACH,EAAD,CACEM,YAAY,aACZC,SAAUL,EACVE,MAAOA,KAET,SAACL,EAAD,CAAKS,KAAK,SAAV,yBCLG,SAASC,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOjC,EAAP,KAAekC,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOjB,EAAP,KAAcmB,EAAd,KACA,GAAwCC,EAAAA,EAAAA,IAAgB,IAAxD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WACJF,KACFxB,EAAAA,EAAAA,IAAewB,GAAOG,MAAK,SAAAC,GAAG,OAAIT,EAAUS,MAC5CR,EAASI,MAEV,CAACA,IAYJ,OACE,4BACE,2CACA,SAACf,EAAD,CACEC,eARiB,SAAAmB,GACrBT,EAASS,EAAEC,OAAOlB,QAQdD,aAfe,SAAAkB,GACnBA,EAAEE,iBACFR,EAAgB,CAAEtB,MAAAA,KAClBD,EAAAA,EAAAA,IAAeC,GAAO0B,MAAK,SAAAC,GAAG,OAAIT,EAAUS,OAaxChB,MAAOX,KAET,SAACjB,EAAA,EAAD,CAAYC,OAAQA","sources":["stiles/MovieList.styled.jsx","components/MoviesList.jsx","services/apiService.js","stiles/SearchForm.styled.jsx","components/SearchForm.jsx","view/MoviesPage.js"],"sourcesContent":["import styled from '@emotion/styled';\nexport const List = styled.ul`\n\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\nexport const Item = styled.li`\ntext-decoration: none;\n margin-right: 30px;\n margin-top: 10px;\n  text-align: start;\n  font-size: 16px;\n   font-family:Verdana, Geneva, Tahoma, sans-serif\n  border-radius: 2px;\n`;","import { Link, useLocation } from 'react-router-dom';\nimport { List, Item } from 'stiles/MovieList.styled';\nimport PropTypes from 'prop-types';\n\nexport default function MoviesList({ movies }) {\n  const location = useLocation();\n \n  return (\n    <List>\n      {movies.map(movie => (\n        <Item key={movie.id}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            <h2>{movie.title}</h2>\n          </Link>\n        </Item>\n      ))}\n    </List>\n  );\n}\n\nMoviesList.propTypes={\n  movies: PropTypes.array.isRequired\n}","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst api_key = '342eb2d403c7b59809d73aa477ec348f';\n\nexport const getTranding = async () => {\n  const {\n    data: { results },\n  } = await axios.get(`/trending/movie/day?page=1&api_key=${api_key}`);\n\n  return results;\n};\n\nexport const getSearchMovie = async query => {\n  const {\n    data: { results },\n  } = await axios.get(`/search/movie?api_key=${api_key}&query=${query}`);\n\n  return results;\n};\n\nexport const getMovieDetails = async id => {\n  const { data } = await axios.get(`/movie/${id}?api_key=${api_key}`);\n\n  return data;\n};\n\nexport const getReview = async id => {\n  const { data } = await axios.get(`/movie/${id}/reviews?api_key=${api_key}`);\n  return data;\n};\n\nexport const getCast = async id => {\n  const { data } = await axios.get(\n    `/movie/${id}/credits?api_key=${api_key}&language=en-US`\n  );\n  return data;\n};\n","import styled from '@emotion/styled';\nexport const Wrap = styled.div`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #477892;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const Btn = styled.button`\n  display: inline-block;\n  width: 60px;\n  height: 48px;\n  border: 0;\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.5;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  background: #b0d8a4;\n  :hover {\n    opacity: 0.7;\n  }\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 15px;\n  padding-right: 10px;\n  ::placeholder {\n  font: inherit;\n  font-size: 18px;\n`;","import { Form, Btn, Input, Wrap } from \"stiles/SearchForm.styled\";\nimport PropTypes from 'prop-types';\n\nexport default function SearchForm({handleSetQuery, handleSubmit, value}){\n    return (\n        <Wrap>\n          <Form onSubmit={handleSubmit}>\n            <Input\n              placeholder=\"movie name\"\n              onChange={handleSetQuery}\n              value={value}\n            />\n            <Btn type=\"submit\">Search</Btn>\n          </Form>\n        </Wrap>\n      );\n}\n\nSearchForm.propTypes = {\n  handleSetQuery: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired\n}","import { getSearchMovie } from 'services/apiService';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport MoviesList from 'components/MoviesList';\nimport SearchForm from 'components/SearchForm';\nimport PropTypes from 'prop-types';\n\nexport default function MoviesPage() {\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams({});\n  const param = searchParams.get('query');\n\n  useEffect(() => {\n    if (param) {\n      getSearchMovie(param).then(res => setMovies(res));\n      setQuery(param);\n    }\n  }, [param]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query });\n    getSearchMovie(query).then(res => setMovies(res));\n  };\n\n  const handleSetQuery = e => {\n    setQuery(e.target.value);\n  };\n\n  return (\n    <div>\n      <h1>Search Movies</h1>\n      <SearchForm\n        handleSetQuery={handleSetQuery}\n        handleSubmit={handleSubmit}\n        value={query}\n      />\n      <MoviesList movies={movies} />\n    </div>\n  );\n}\n\nMoviesPage.propTypes = {\n  searchParams: PropTypes.object,\n};\n"],"names":["List","styled","Item","MoviesList","movies","location","useLocation","map","movie","to","id","state","from","title","axios","api_key","getTranding","results","data","getSearchMovie","query","getMovieDetails","getReview","getCast","Wrap","Form","Btn","Input","SearchForm","handleSetQuery","handleSubmit","value","onSubmit","placeholder","onChange","type","MoviesPage","useState","setMovies","setQuery","useSearchParams","searchParams","setSearchParams","param","get","useEffect","then","res","e","target","preventDefault"],"sourceRoot":""}